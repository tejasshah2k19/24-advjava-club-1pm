3action :: attribute is used to mention where our request submitted to the server 
		  which resource is responsible for serve the request and response 


method :: how data will transfer from client to server 
		get: data will pass via url - plain text 
		post : data will pass in hidden with basic encryption
		
		
submit button : we must need to use this button to submit request on server 

name : name attribute must be added to all the form tag otherwise data will not 
		pass to the server 
		
----------------------------------------------------------------------------------		
		 

MVC - design pattern 

model : data 
view  : input output USER 
controller : logic 



facebook -> Signup ->
	Signup.html -> fn ln em pwd : submit -> 
			request -> server ->	
					SignupServlet 
					read 
					validate 
					db connection 
					insert 
							response -> Login.html 
							
							respinse -> Error {Signup}
		
		
		view : Signup.html , Login.html
		controller  :  SignupServlet 
		model : read temp , db 					
-------------------------------------------------------------------------							
							
//project->rightclick=>properties->
//java build path -> libraries -> add external jar -> browse->
//tomcat path -> lib -> servlet-api.jar -> open ->
//click on order and exports -> select all -> apply and close 

//1) class extends HttpServlet
//2) override service()
//3) url pattern 

//jar -> servlet-api.jar 
//HttpServlet 

//paypal-api.jar 

//aws-api.jar 

//tomcat->lib ,   internet 

//servlet is a java class

//class -> thread ? 
//class -> exception? 
//class -> applet ? 
			
----------------------------------------------------------------------------------------------
JSP -> java server pages 
       java servlet pages** 
       
JSP -> HTML 

InputName.html

InputName.jsp 
	jsp -> HTML + Java 
	by default every things are html in jsp 
	but you can write java stuff inside jsp 
	
	to write java stuff we have some special symbols 
	Scriptlet   : <% %>  : java logic 
	expression  : <%= %> : java print 
	declaration : <%! %> : instance level declaration** 
---------------------------------------------------------------------------------------------------

	${}   => expression lang 
			EL 
			
--------------------------------------------------------------------------

driver => 
	vendor ->webiste-> driver download 
	
	copy jar file into WEB-INF/lib folder
	
	activate jar -> 
			right click on project -> 
					properties -> java build path -> 
						click on libraries tab -> {click on class path if present } ->
						add jar -> browse-> project->webapp->webinf-lib-> .jar -> select/open 
						-> click on order and export tab  
						-> click on select all button -> apply and close 
						
--------------------------------------------------------------------------- 	
						  
Db connection -> 

		 
1) driver class name 
2) url 
3) userName
4) password 

----------------------------------------------------------------------------


hyperlink -> data -> query string

?

------------------------------------------------------------------------------- 

	request -> pre process -> 
	Signup.jsp -> input -> Servlet -> validation -> back 
	Signup.jsp -> input -> XXXXX ->  validation -> back ->correct-> Servlet -> 
	
	
	filter -> pre process ->
	
	whatsapp -> 55MB -> send ->upload? server ->download? you 
	
	whatsapp ->compressFilter->20MB-> upload ->server->download->20MB 
	
			
how to  create filter ? 

1)class extends implements 	Filter interface
2) override all the methods 
	init()
	destroy()
	doFilter()
3) @WebFilter 
------------------------------------------------------------
	
can we have n number of filter for 1 servlet ? yes 
can we have 1 filter for n number of servlet ? yes 


IpFilter
@WebFilter("/")


------------------------------------------------------------
filter ->
init 

doFilter 

destroy	
	



servlet -> init() -> first request servlet 
filter  -> init() -> server start 

servlet -> service() -> n time, request 
filter  -> doFilter() -> request : servlet 


servlet -> destroy() -> shutdown the server 
filter  -> destroy() -> shutdowm the server 
			
------------------------------------------------------------------------------			
			
Reusable web component --> 


	1) dynamic inclusion :: <jsp:include page="Header.jsp"></jsp:include> --> standard action
	2) static inclusion  :: <%@include file="Footer.jsp"%> 		--> directive 	
			
			
		Header.jsp  3 line 
		Footer.jsp  3 line 
		
		Home.jsp 5 line 
		Cart.jsp 5 line 
		
		Home.jsp -> dynamic inclusion add Header.jsp  {5+0}
		
		Cart.jsp -> static inclusion add Header.jsp   {5+3}
			
			
--------------------------------------------------------------------------			
			 	
 
how to create servlet ?

1)class extends HttpServlet 
2)override method -> service 
3)@WebServlet 

--------------------------------------------------------------------------			
session ---> server 
cookie ---> browser 

.in vs .com   ?
accept cookie ? 


cookie -> information -> user's information -> 
				name 
				pincode 
				address 
session ---> information --> user's 		
		creditcard 
		otp
		cvv 
		
		

	
			
---------------------------------------------------------------------------			
	how to set data in cookie --> 		
			
			
			
			
1) chrome extension "edithiscookie"			













			
			
			
							